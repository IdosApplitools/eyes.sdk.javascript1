import SessionType from '../enums/SessionType';
import StitchMode from '../enums/StitchMode';
import MatchLevel from '../enums/MatchLevel';
import BrowserName from '../enums/BrowserName';
import DeviceName from '../enums/DeviceName';
import ScreenOrientation from '../enums/ScreenOrientation';
import RectangleSizeData, { RectangleSize } from './RectangleSize';
import ProxySettingsData, { ProxySettings } from './ProxySettings';
import BatchInfoData, { BatchInfo } from './BatchInfo';
import CustomPropertyData, { CustomProperty } from './CustomProperty';
import ImageMatchSettingsData, { ImageMatchSettings } from './ImageMatchSettings';
import { AccessibilitySettings } from './AccessibilitySettings';
import { RenderInfo } from './RenderInfo';
export declare type Configuration = {
    showLogs?: boolean;
    appName?: string;
    testName?: string;
    displayName?: string;
    isDisabled?: boolean;
    matchTimeout?: number;
    sessionType?: SessionType;
    viewportSize?: RectangleSize;
    agentId?: string;
    apiKey?: string;
    serverUrl?: string;
    proxy?: ProxySettings;
    connectionTimeout?: number;
    removeSession?: boolean;
    batch?: BatchInfo;
    properties?: CustomProperty[];
    baselineEnvName?: string;
    environmentName?: string;
    branchName?: string;
    parentBranchName?: string;
    baselineBranchName?: string;
    compareWithParentBranch?: boolean;
    ignoreBaseline?: boolean;
    saveFailedTests?: boolean;
    saveNewTests?: boolean;
    saveDiffs?: boolean;
    sendDom?: boolean;
    hostApp?: string;
    hostOS?: string;
    hostAppInfo?: string;
    hostOSInfo?: string;
    deviceInfo?: string;
    defaultMatchSettings?: ImageMatchSettings;
    forceFullPageScreenshot?: boolean;
    waitBeforeScreenshots?: number;
    stitchMode?: StitchMode;
    hideScrollbars?: boolean;
    hideCaret?: boolean;
    stitchOverlap?: number;
    concurrentSessions?: number;
    isThrowExceptionOn?: boolean;
    browsersInfo?: RenderInfo[];
    visualGridOptions?: {
        [key: string]: any;
    };
    layoutBreakpoints?: boolean | number[];
    disableBrowserFetching?: boolean;
    dontCloseBatches?: boolean;
};
export default class ConfigurationData implements Required<Configuration> {
    private _showLogs;
    private _appName;
    private _testName;
    private _displayName;
    private _isDisabled;
    private _matchTimeout;
    private _sessionType;
    private _viewportSize;
    private _agentId;
    private _apiKey;
    private _serverUrl;
    private _proxy;
    private _connectionTimeout;
    private _removeSession;
    private _batch;
    private _properties;
    private _baselineEnvName;
    private _environmentName;
    private _branchName;
    private _parentBranchName;
    private _baselineBranchName;
    private _compareWithParentBranch;
    private _ignoreBaseline;
    private _saveFailedTests;
    private _saveNewTests;
    private _saveDiffs;
    private _sendDom;
    private _hostApp;
    private _hostOS;
    private _hostAppInfo;
    private _hostOSInfo;
    private _deviceInfo;
    private _defaultMatchSettings;
    private _forceFullPageScreenshot;
    private _waitBeforeScreenshots;
    private _stitchMode;
    private _hideScrollbars;
    private _hideCaret;
    private _stitchOverlap;
    private _concurrentSessions;
    private _isThrowExceptionOn;
    private _browsersInfo;
    private _visualGridOptions;
    private _layoutBreakpoints;
    private _disableBrowserFetching;
    private _dontCloseBatches;
    constructor(config?: Configuration);
    get showLogs(): boolean;
    set showLogs(showLogs: boolean);
    getShowLogs(): boolean;
    setShowLogs(showLogs: boolean): this;
    get appName(): string;
    set appName(appName: string);
    getAppName(): string;
    setAppName(appName: string): this;
    get testName(): string;
    set testName(testName: string);
    getTestName(): string;
    setTestName(testName: string): this;
    get displayName(): string;
    set displayName(displayName: string);
    getDisplayName(): string;
    setDisplayName(displayName: string): this;
    get isDisabled(): boolean;
    set isDisabled(isDisabled: boolean);
    getIsDisabled(): boolean;
    setIsDisabled(isDisabled: boolean): this;
    get matchTimeout(): number;
    set matchTimeout(matchTimeout: number);
    getMatchTimeout(): number;
    setMatchTimeout(matchTimeout: number): this;
    get sessionType(): SessionType;
    set sessionType(sessionType: SessionType);
    getSessionType(): SessionType;
    setSessionType(sessionType: SessionType): this;
    get viewportSize(): RectangleSize;
    set viewportSize(viewportSize: RectangleSize);
    getViewportSize(): RectangleSize;
    setViewportSize(viewportSize: RectangleSize | RectangleSizeData): this;
    get agentId(): string;
    set agentId(agentId: string);
    getAgentId(): string;
    setAgentId(agentId: string): this;
    get apiKey(): string;
    set apiKey(apiKey: string);
    getApiKey(): string;
    setApiKey(apiKey: string): this;
    get serverUrl(): string;
    set serverUrl(serverUrl: string);
    getServerUrl(): string;
    setServerUrl(serverUrl: string): this;
    get proxy(): ProxySettings;
    set proxy(proxy: ProxySettings);
    getProxy(): ProxySettingsData;
    setProxy(proxy: ProxySettings | ProxySettingsData): this;
    setProxy(isDisabled: true): this;
    setProxy(url: string, username?: string, password?: string, isHttpOnly?: boolean): this;
    get connectionTimeout(): number;
    set connectionTimeout(connectionTimeout: number);
    getConnectionTimeout(): number;
    setConnectionTimeout(connectionTimeout: number): this;
    get removeSession(): boolean;
    set removeSession(removeSession: boolean);
    getRemoveSession(): boolean;
    setRemoveSession(removeSession: boolean): this;
    get batch(): BatchInfo;
    set batch(batch: BatchInfo);
    getBatch(): BatchInfoData;
    setBatch(batch: BatchInfo | BatchInfoData): this;
    get properties(): CustomProperty[];
    set properties(properties: CustomProperty[]);
    getProperties(): CustomPropertyData[];
    setProperties(properties: CustomProperty[] | CustomPropertyData[]): this;
    addProperty(name: string, value: string): this;
    addProperty(prop: CustomProperty | CustomPropertyData): this;
    get baselineEnvName(): string;
    set baselineEnvName(baselineEnvName: string);
    getBaselineEnvName(): string;
    setBaselineEnvName(baselineEnvName: string): this;
    get environmentName(): string;
    set environmentName(environmentName: string);
    getEnvironmentName(): string;
    setEnvironmentName(environmentName: string): this;
    get branchName(): string;
    set branchName(branchName: string);
    getBranchName(): string;
    setBranchName(branchName: string): this;
    get parentBranchName(): string;
    set parentBranchName(parentBranchName: string);
    getParentBranchName(): string;
    setParentBranchName(parentBranchName: string): this;
    get baselineBranchName(): string;
    set baselineBranchName(baselineBranchName: string);
    getBaselineBranchName(): string;
    setBaselineBranchName(baselineBranchName: string): this;
    get compareWithParentBranch(): boolean;
    set compareWithParentBranch(compareWithParentBranch: boolean);
    getCompareWithParentBranch(): boolean;
    setCompareWithParentBranch(compareWithParentBranch: boolean): this;
    get ignoreBaseline(): boolean;
    set ignoreBaseline(ignoreBaseline: boolean);
    getIgnoreBaseline(): boolean;
    setIgnoreBaseline(ignoreBaseline: boolean): this;
    get saveFailedTests(): boolean;
    set saveFailedTests(saveFailedTests: boolean);
    getSaveFailedTests(): boolean;
    setSaveFailedTests(saveFailedTests: boolean): this;
    get saveNewTests(): boolean;
    set saveNewTests(saveNewTests: boolean);
    getSaveNewTests(): boolean;
    setSaveNewTests(saveNewTests: boolean): this;
    get saveDiffs(): boolean;
    set saveDiffs(saveDiffs: boolean);
    getSaveDiffs(): boolean;
    setSaveDiffs(saveDiffs: boolean): this;
    get sendDom(): boolean;
    set sendDom(sendDom: boolean);
    getSendDom(): boolean;
    setSendDom(sendDom: boolean): this;
    get hostApp(): string;
    set hostApp(hostApp: string);
    getHostApp(): string;
    setHostApp(hostApp: string): this;
    get hostOS(): string;
    set hostOS(hostOS: string);
    getHostOS(): string;
    setHostOS(hostOS: string): this;
    get hostAppInfo(): string;
    set hostAppInfo(hostAppInfo: string);
    getHostAppInfo(): string;
    setHostAppInfo(hostAppInfo: string): this;
    get hostOSInfo(): string;
    set hostOSInfo(hostOSInfo: string);
    getHostOSInfo(): string;
    setHostOSInfo(hostOSInfo: string): this;
    get deviceInfo(): string;
    set deviceInfo(deviceInfo: string);
    getDeviceInfo(): string;
    setDeviceInfo(deviceInfo: string): this;
    get defaultMatchSettings(): ImageMatchSettings;
    set defaultMatchSettings(defaultMatchSettings: ImageMatchSettings);
    getDefaultMatchSettings(): ImageMatchSettings;
    setDefaultMatchSettings(defaultMatchSettings: ImageMatchSettings | ImageMatchSettingsData): this;
    getMatchLevel(): MatchLevel;
    setMatchLevel(matchLevel: MatchLevel): this;
    getAccessibilityValidation(): AccessibilitySettings;
    setAccessibilityValidation(accessibilityValidation: AccessibilitySettings): this;
    getUseDom(): boolean;
    setUseDom(useDom: boolean): this;
    getEnablePatterns(): boolean;
    setEnablePatterns(enablePatterns: boolean): this;
    getIgnoreDisplacements(): boolean;
    setIgnoreDisplacements(ignoreDisplacements: boolean): this;
    getIgnoreCaret(): boolean;
    setIgnoreCaret(ignoreCaret: boolean): this;
    get forceFullPageScreenshot(): boolean;
    set forceFullPageScreenshot(forceFullPageScreenshot: boolean);
    getForceFullPageScreenshot(): boolean;
    setForceFullPageScreenshot(forceFullPageScreenshot: boolean): this;
    get waitBeforeScreenshots(): number;
    set waitBeforeScreenshots(waitBeforeScreenshots: number);
    getWaitBeforeScreenshots(): number;
    setWaitBeforeScreenshots(waitBeforeScreenshots: number): this;
    get stitchMode(): StitchMode;
    set stitchMode(stitchMode: StitchMode);
    getStitchMode(): StitchMode;
    setStitchMode(stitchMode: StitchMode): this;
    get hideScrollbars(): boolean;
    set hideScrollbars(hideScrollbars: boolean);
    getHideScrollbars(): boolean;
    setHideScrollbars(hideScrollbars: boolean): this;
    get hideCaret(): boolean;
    set hideCaret(hideCaret: boolean);
    getHideCaret(): boolean;
    setHideCaret(hideCaret: boolean): this;
    get stitchOverlap(): number;
    set stitchOverlap(stitchOverlap: number);
    getStitchOverlap(): number;
    setStitchOverlap(stitchOverlap: number): this;
    get concurrentSessions(): number;
    set concurrentSessions(concurrentSessions: number);
    getConcurrentSessions(): number;
    setConcurrentSessions(concurrentSessions: number): this;
    get isThrowExceptionOn(): boolean;
    set isThrowExceptionOn(isThrowExceptionOn: boolean);
    getIsThrowExceptionOn(): boolean;
    setIsThrowExceptionOn(isThrowExceptionOn: boolean): this;
    get browsersInfo(): RenderInfo[];
    set browsersInfo(browsersInfo: RenderInfo[]);
    getBrowsersInfo(): RenderInfo[];
    setBrowsersInfo(browsersInfo: RenderInfo[]): this;
    addBrowsers(...browsersInfo: RenderInfo[]): this;
    addBrowser(browserInfo: RenderInfo): this;
    addBrowser(width: number, height: number, name?: BrowserName): this;
    addDeviceEmulation(deviceName: DeviceName, screenOrientation?: ScreenOrientation): this;
    get visualGridOptions(): {
        [key: string]: any;
    };
    set visualGridOptions(visualGridOptions: {
        [key: string]: any;
    });
    getVisualGridOptions(): {
        [key: string]: any;
    };
    setVisualGridOptions(visualGridOptions: {
        [key: string]: any;
    }): this;
    setVisualGridOption(key: string, value: any): this;
    get layoutBreakpoints(): boolean | number[];
    set layoutBreakpoints(layoutBreakpoints: boolean | number[]);
    getLayoutBreakpoints(): boolean | number[];
    setLayoutBreakpoints(layoutBreakpoints: boolean | number[]): this;
    get disableBrowserFetching(): boolean;
    set disableBrowserFetching(disableBrowserFetching: boolean);
    getDisableBrowserFetching(): boolean;
    setDisableBrowserFetching(disableBrowserFetching: boolean): this;
    get dontCloseBatches(): boolean;
    set dontCloseBatches(dontCloseBatches: boolean);
    getDontCloseBatches(): boolean;
    setDontCloseBatches(dontCloseBatches: boolean): this;
    toString(): string;
    toJSON(): Configuration;
}
